// automatically generated by the FlatBuffers compiler, do not modify

package appeng.flatbuffers.scene;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@javax.annotation.processing.Generated(value="flatc")
@SuppressWarnings("unused")
public final class ExpCameraSettings extends Struct {
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public ExpCameraSettings __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public float yaw() { return bb.getFloat(bb_pos + 0); }
  public void mutateYaw(float yaw) { bb.putFloat(bb_pos + 0, yaw); }
  public float pitch() { return bb.getFloat(bb_pos + 4); }
  public void mutatePitch(float pitch) { bb.putFloat(bb_pos + 4, pitch); }
  public float roll() { return bb.getFloat(bb_pos + 8); }
  public void mutateRoll(float roll) { bb.putFloat(bb_pos + 8, roll); }
  public float zoom() { return bb.getFloat(bb_pos + 12); }
  public void mutateZoom(float zoom) { bb.putFloat(bb_pos + 12, zoom); }

  public static int createExpCameraSettings(FlatBufferBuilder builder, float yaw, float pitch, float roll, float zoom) {
    builder.prep(4, 16);
    builder.putFloat(zoom);
    builder.putFloat(roll);
    builder.putFloat(pitch);
    builder.putFloat(yaw);
    return builder.offset();
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public ExpCameraSettings get(int j) { return get(new ExpCameraSettings(), j); }
    public ExpCameraSettings get(ExpCameraSettings obj, int j) {  return obj.__assign(__element(j), bb); }
  }
}


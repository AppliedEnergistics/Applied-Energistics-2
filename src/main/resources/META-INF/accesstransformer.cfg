# GUI rendering
protected net.minecraft.client.gui.screens.inventory.AbstractContainerScreen renderSlot(Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/inventory/Slot;)V
public net.minecraft.client.gui.components.EditBox getMaxLength()I
public net.minecraft.client.gui.components.EditBox isEditable()Z

public net.minecraft.world.inventory.Slot slot
protected net.minecraft.client.gui.screens.inventory.AbstractContainerScreen isHovering(Lnet/minecraft/world/inventory/Slot;DD)Z
protected net.minecraft.client.gui.screens.inventory.AbstractContainerScreen findSlot(DD)Lnet/minecraft/world/inventory/Slot;

# Render block outlines
public net.minecraft.client.renderer.LevelRenderer renderShape(Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/phys/shapes/VoxelShape;DDDFFFF)V

# Baked Quad Winding
public net.minecraft.client.renderer.block.model.BlockModel FACE_BAKERY
public net.minecraft.client.renderer.block.model.FaceBakery recalculateWinding([ILnet/minecraft/core/Direction;)V

# Structures
public net.minecraft.world.level.levelgen.structure.StructureType register(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/StructureType;
public net.minecraft.world.level.levelgen.flat.FlatLevelGeneratorSettings STRUCTURE_FEATURES

# Worldgen
public net.minecraft.data.worldgen.placement.OrePlacements commonOrePlacement(ILnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List;

# Tests
public net.minecraft.gametest.framework.GameTestHelper testInfo

# Delay continued left clicks
public net.minecraft.client.multiplayer.MultiPlayerGameMode destroyDelay

# We need to change yPos of existing slots to resize the container
public-f net.minecraft.world.inventory.Slot x
public-f net.minecraft.world.inventory.Slot y

# For JEI registration
public net.minecraft.world.item.crafting.RecipeManager byType(Lnet/minecraft/world/item/crafting/RecipeType;)Ljava/util/Collection;

# To disable water-bobbing of item entities (for growing crystals)
protected net.minecraft.world.entity.item.ItemEntity setUnderwaterMovement()V

# For structure registration
public net.minecraft.world.level.levelgen.feature.StructureFeature STEP
public net.minecraft.world.level.levelgen.structure.pieces.StructurePieceType setPieceId(Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceType$ContextlessType;Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceType;
public net.minecraft.data.worldgen.Structures structure(Lnet/minecraft/tags/TagKey;Ljava/util/Map;Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration;Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment;)Lnet/minecraft/world/level/levelgen/structure/Structure$StructureSettings;

# For overlay rendering
public net.minecraft.client.renderer.RenderStateShard$LineStateShard

# Data Gen
public-f net.minecraft.data.recipes.RecipeProvider getName()Ljava/lang/String;
public net.minecraft.data.models.BlockModelGenerators createRotatedPillar()Lnet/minecraft/data/models/blockstates/PropertyDispatch;

# Tests
public net.minecraft.data.recipes.RecipeProvider has(Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance;

# Villager Trades
public net.minecraft.world.entity.npc.VillagerTrades$EmeraldForItems
public net.minecraft.world.entity.npc.VillagerTrades$ItemsForEmeralds

# Guidebook
public net.minecraft.client.gui.Font getFontSet(Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/gui/font/FontSet;
public net.minecraft.client.gui.screens.LoadingOverlay reload
public net.minecraft.world.item.crafting.SmithingTrimRecipe template
public net.minecraft.world.item.crafting.SmithingTrimRecipe base
public net.minecraft.world.item.crafting.SmithingTrimRecipe addition
public net.minecraft.world.item.crafting.SmithingTransformRecipe template
public net.minecraft.world.item.crafting.SmithingTransformRecipe base
public net.minecraft.world.item.crafting.SmithingTransformRecipe addition

# Auto Rotating Model
public net.minecraft.client.resources.model.ModelManager$ReloadState

# GUI
public net.minecraft.world.inventory.AbstractContainerMenu stateId
public net.minecraft.client.gui.screens.Screen setInitialFocus(Lnet/minecraft/client/gui/components/events/GuiEventListener;)V
public net.minecraft.client.gui.components.EditBox renderHighlight(Lnet/minecraft/client/gui/GuiGraphics;IIII)V

# Matter Cannon Damage Source
public net.minecraft.world.damagesource.DamageSources source(Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource;
public net.minecraft.world.damagesource.DamageSources source(Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/damagesource/DamageSource;
public net.minecraft.world.damagesource.DamageSources source(Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource;

public net.minecraft.client.renderer.RenderStateShard RENDERTYPE_LINES_SHADER
public net.minecraft.client.renderer.RenderStateShard VIEW_OFFSET_Z_LAYERING
public net.minecraft.client.renderer.RenderStateShard ITEM_ENTITY_TARGET
public net.minecraft.client.renderer.RenderStateShard COLOR_WRITE
public net.minecraft.client.renderer.RenderStateShard NO_CULL
public net.minecraft.client.renderer.RenderStateShard LIGHTMAP
public net.minecraft.client.renderer.RenderStateShard RENDERTYPE_TRANSLUCENT_SHADER

public net.minecraft.client.renderer.RenderStateShard BLOCK_SHEET_MIPPED
public net.minecraft.client.renderer.RenderStateShard NO_TEXTURE

public net.minecraft.client.renderer.RenderStateShard NO_TRANSPARENCY
public net.minecraft.client.renderer.RenderStateShard ADDITIVE_TRANSPARENCY
public net.minecraft.client.renderer.RenderStateShard LIGHTNING_TRANSPARENCY
public net.minecraft.client.renderer.RenderStateShard GLINT_TRANSPARENCY
public net.minecraft.client.renderer.RenderStateShard CRUMBLING_TRANSPARENCY
public net.minecraft.client.renderer.RenderStateShard TRANSLUCENT_TRANSPARENCY

public net.minecraft.client.renderer.RenderStateShard NO_DEPTH_TEST
public net.minecraft.client.renderer.RenderStateShard EQUAL_DEPTH_TEST
public net.minecraft.client.renderer.RenderStateShard LEQUAL_DEPTH_TEST
public net.minecraft.client.renderer.RenderStateShard GREATER_DEPTH_TEST

public net.minecraft.world.level.block.Blocks always(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z
public net.minecraft.world.level.block.Blocks never(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z

public net.minecraft.client.gui.GuiGraphics renderItem(Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;IIII)V

# Introspection of RenderType
public net.minecraft.client.renderer.RenderStateShard name # name

public net.minecraft.client.renderer.RenderType$CompositeRenderType
public net.minecraft.client.renderer.RenderType$CompositeRenderType state()Lnet/minecraft/client/renderer/RenderType$CompositeState;
public net.minecraft.client.renderer.RenderType$CompositeState states
public net.minecraft.client.renderer.RenderType$CompositeState shaderState
public net.minecraft.client.renderer.RenderType$CompositeState textureState
public net.minecraft.client.renderer.RenderType$CompositeState transparencyState
public net.minecraft.client.renderer.RenderType$CompositeState depthTestState
public net.minecraft.client.renderer.RenderType$CompositeState cullState
public net.minecraft.client.renderer.RenderType$CompositeState lightmapState
public net.minecraft.client.renderer.RenderType$CompositeState overlayState
public net.minecraft.client.renderer.RenderType$CompositeState layeringState
public net.minecraft.client.renderer.RenderType$CompositeState outputState
public net.minecraft.client.renderer.RenderType$CompositeState texturingState
public net.minecraft.client.renderer.RenderType$CompositeState writeMaskState
public net.minecraft.client.renderer.RenderType$CompositeState lineState
public net.minecraft.client.renderer.RenderStateShard$TextureStateShard mipmap
public net.minecraft.client.renderer.RenderStateShard$TextureStateShard blur
public net.minecraft.client.renderer.RenderStateShard$TextureStateShard texture
public net.minecraft.client.renderer.RenderStateShard$ShaderStateShard shader
public net.minecraft.client.renderer.texture.SpriteContents originalImage

# Introspecting animated sprites
public net.minecraft.client.renderer.texture.SpriteContents$AnimatedTexture
public net.minecraft.client.renderer.texture.SpriteContents animatedTexture
public net.minecraft.client.renderer.texture.SpriteContents$AnimatedTexture frames
public net.minecraft.client.renderer.texture.SpriteContents$AnimatedTexture interpolateFrames
public net.minecraft.client.renderer.texture.SpriteContents$AnimatedTexture frameRowSize
public net.minecraft.client.renderer.texture.SpriteContents$FrameInfo
public net.minecraft.client.renderer.texture.SpriteContents$FrameInfo index
public net.minecraft.client.renderer.texture.SpriteContents$FrameInfo time

public net.minecraft.client.renderer.texture.TextureAtlas sprites
public net.minecraft.client.renderer.texture.TextureAtlas getWidth()I
public net.minecraft.client.renderer.texture.TextureAtlas getHeight()I
public net.minecraft.client.renderer.texture.SpriteContents$AnimatedTexture uploadFrame(III)V

# Entity forceloading
public net.minecraft.server.level.ServerLevel entityManager
public net.minecraft.world.level.entity.PersistentEntitySectionManager permanentStorage
public net.minecraft.world.level.entity.PersistentEntitySectionManager chunkVisibility


name: 'Release'

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Export release tag as environment variable
        env:
          TAG: ${{ github.event.release.tag_name }}
        run: |
          echo "TAG=${TAG}" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: Set up JDK 16
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '16'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Validate no assets
        run: test ! -d ./src/generated
      - name: Generate assets
        run: ./gradlew runData --no-daemon --max-workers 1
      - name: Validate assets
        run: test -d ./src/generated -a -f ./src/generated/resources/.cache/cache
      - name: Build with Gradle
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew build --no-daemon --max-workers 1
      - name: Upload to curseforge
        env:
          CHANGELOG: ${{ github.event.release.body }}
          CURSEFORGE: ${{ secrets.CURSEFORGE }}
        run: ./gradlew curseforge --no-daemon --max-workers 1
      - name: Publish to github packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew publishMavenPublicationToGitHubPackagesRepository --no-daemon --max-workers 1
      - name: Publish to modmaven
        env:
          MODMAVEN_USER: ${{ secrets.MODMAVEN_USER }}
          MODMAVEN_PASSWORD: ${{ secrets.MODMAVEN_PASSWORD }}
        run: ./gradlew publishMavenPublicationToModmavenRepository --no-daemon --max-workers 1
      - name: Prepare artifact metadata. Note that VERSION is set by the gradle script.
        id: prepare_artifact_metadata
        run: |
          echo ::set-output name=ARTIFACT_PATH::./build/libs/appliedenergistics2-${VERSION}.jar
          echo ::set-output name=ARTIFACT_NAME::appliedenergistics2-${VERSION}.jar
      - name: Upload Release Artifact
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ steps.prepare_artifact_metadata.outputs.ARTIFACT_PATH }}
          asset_name: ${{ steps.prepare_artifact_metadata.outputs.ARTIFACT_NAME }}
          asset_content_type: application/zip

name: 'Export Guide'

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Install Software OpenGL Rendering
        run: sudo apt-get install xvfb libgl1-mesa-dri zopfli
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'microsoft'
          java-version: '17'
          cache: 'gradle'
      - name: Generate Assets
        run: ./gradlew runData
      - name: Export Guide
        run: DRI_PRIME=0 xvfb-run ./gradlew runGuideexport
      - name: Optimize PNG compression
        run: |
          mkdir oxipng
          curl -s https://github.com/shssoichiro/oxipng/releases/download/v8.0.0/oxipng-8.0.0-x86_64-unknown-linux-musl.tar.gz | tar --strip-components=1 -zx -C oxipng
          oxipng -Z -o 4 --strip safe --timeout 5 build/guide
      - name: Recompress the guide json
        run: |
          gunzip build/guide/*.json.gz
          zopfli build/guide/*.json
      - uses: actions/upload-artifact@v2
        with:
          name: guide
          path: build/guide/

  publish:
    needs: build
    name: Publish
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: guide
          path: build/guide/
      - id: versions
        name: Determine Game and Mod-Version
        run: |
          GAME_VERSION=$(jq -r .gameVersion 'build/guide/index.json')
          echo "Game-Version: $GAME_VERSION"
          MOD_VERSION=$(jq -r .modVersion 'build/guide/index.json')
          echo "Mod-Version: MOD_VERSION"
          
          echo "GAME_VERSION=$GAME_VERSION" >> "$GITHUB_OUTPUT"
          echo "MOD_VERSION=$MOD_VERSION" >> "$GITHUB_OUTPUT"
          
          if [ -z "$GAME_VERSION" ]
          then
            exit 1
          fi
      - uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: 'guide-assets'
          AWS_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          AWS_S3_ENDPOINT: 'https://02aa146d8ef70ae7f9548b98cbb63161.r2.cloudflarestorage.com'
          AWS_REGION: 'auto'
          SOURCE_DIR: 'build/guide/'
          DEST_DIR: "minecraft-${{ steps.versions.outputs.GAME_VERSION }}"
